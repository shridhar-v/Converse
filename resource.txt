*** Settings ***
Documentation     A resource file containing the application specific keywords
...               that create our own domain specific language. This resource
...               implements keywords for testing HTML version of the test
...               application.
Library           Selenium2Custom.py

*** Variables ***
${BASE_URL}       http://teststudio.bonzai.ad/
${BROWSER}        chrome

*** Keywords ***
Open Bozai Studio
    [Documentation]    Opens google news base page
    Open Browser    ${BASE_URL}    ${BROWSER}
    Title Should Be    Bonzai Studio
    Maximize Browser Window
    Wait Until Page Contains    I can't access my account, please help    15

Login
    Input Text    idUser    test_user
    Input Password    password    b0n2a1
    Click Button    css=#signInBtn
    Wait Until Page Contains    Campaigns
    Wait Until Page Contains    \ \ \ \ \ \ \ CREATE NEW CAMPAIGN \ \ \ \ \ \    20s

Open Campaign
    [Arguments]    ${campaign}
    Log    Opening Campaign with the title ${campaign} (locator: css=div.campaignList div[title='${campaign}'])
    Click Element    css=div.campaignList div[title='${campaign}']

Open Ad
    [Arguments]    ${ad}    # Title of the Advertisement
    Wait Until Page Contains    Sort by
    Log    Opening Ad with the title ${ad} (locator: css=div.adDetails div[title='${ad}'])
    Click Element    css=div.adDetails div[title='${ad}']
    Switch To Last Window
    Wait Until Page Contains    SOCIAL ELEMENTS

Add
    [Arguments]    ${type}
    Drag And Drop    css=.eleList [restype='${type}']    css=.dummyCanvasWrapper
    Drag Drop With Offset To Element    css=.eleList [restype='${type}']    css=.dummyCanvasWrapper    5    5

Open/Close Page Tool
    Click Element    css=.dummyPageToolButton
    Sleep    3s
    Wait Until Page Contains    Page Tools

Duplicate Page
    [Arguments]    ${page_name}
    Click Element    //div[.='${page_name}']/..//button[contains(@class,'Duplicate')]
    Sleep    2s

Delete Page
    [Arguments]    ${page_name}    ${sleep}=2s
    Mouse Over    //div[@class='mCSB_container mCS_no_scrollbar']//div[.='${page_name}']
    Click Element    //div[.='${page_name}']/..//button[contains(@class,'Delete')]
    Sleep    ${sleep}

Delete Element
    [Arguments]    ${label}
    Select Element    ${label}
    Press Key    xpath=//*[.='${label}' and @id]    127
    Sleep    2s

Select Element
    [Arguments]    ${label}
    Focus    xpath=//*[.='${label}' and @id]
    Sleep    1s

Set Label
    [Arguments]    ${labelText}
    Input Text    xpath=//*[@key='label' or @key='labelTextArea']    ${labelText}

Select Page
    [Arguments]    ${page_name}
    Click Element    //div[@class='mCSB_container mCS_no_scrollbar']//div[.='${page_name}']

Create New Campaign
    [Arguments]    ${campaignName}    @{campaignTypes}
    Click Button    btn-new-camp
    Wait Until Page Contains     CREATE CAMPAIGN
    Input Text    inputCampName    ${campaignName}
    Click Element    css=div.dummySectorMulti
    :FOR    ${type}    IN    @{campaignTypes}
    \    Click Element    xpath=//span[.="${type}"]
    Click Element    inputCampName
    Click Button    btn-submit-camp
    Wait Until Page Contains     \ \ \ \ \ \ \ CREATE NEW AD \ \ \ \ \ \
    Sleep    2s

Create New Ad
    [Arguments]    ${adName}    ${deviceType}
    Click Button    btn-new-ad
    Sleep    3s
    Click Element    css=.blank_layout
    Sleep    5s
    Input Text    css=.dummyBlankAdNameInput    ${adName}
    Sleep    3s
    Click Element    css=.radio-inline input[devicetype="${deviceType}"]
    Click Element     css=.create_ad
    Sleep    3s
    Switch To Last Window
